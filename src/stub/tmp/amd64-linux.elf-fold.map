
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x00000000000000b0                . = SIZEOF_HEADERS

.text           0x00000000000000b0      0x9c0
 .text          0x00000000000000b0      0x206 tmp/amd64-linux.elf-fold.o
                0x00000000000000be                get_page_mask
                0x00000000000002a4                munmap
                0x000000000000026b                mmap
                0x00000000000002ac                write
                0x00000000000002b0                read
                0x00000000000002b4                my_bkpt
                0x0000000000000282                Pprotect
                0x00000000000000d5                f_unf
                0x0000000000000294                exit
                0x0000000000000298                brk
                0x00000000000002a0                open
                0x00000000000002a8                mprotect
                0x000000000000029c                close
 *fill*         0x00000000000002b6        0x2 00
 .text          0x00000000000002b8      0x7b7 tmp/amd64-linux.elf-main.o
                0x0000000000000928                upx_main
 *fill*         0x0000000000000a6f        0x1 00
 .text          0x0000000000000a70        0x0 tmp/amd64-expand.o
                0x0000000000000a70                . = ALIGN (0x1)
                0x0000000000000a70                __start_EXP_HEAD = .

EXP_HEAD        0x0000000000000a70       0xe4
 EXP_HEAD       0x0000000000000a70       0xe4 tmp/amd64-expand.o
                0x0000000000000a70                f_expand
                0x0000000000000b54                __stop_EXP_HEAD = .
                0x0000000000000b54                . = ALIGN (0x1)
                0x0000000000000b54                __start_NRV2E = .

NRV2E           0x0000000000000b54       0xec
 NRV2E          0x0000000000000b54       0xec tmp/amd64-expand.o
                0x0000000000000c40                __stop_NRV2E = .
                0x0000000000000c40                . = ALIGN (0x1)
                0x0000000000000c40                __start_NRV2D = .

NRV2D           0x0000000000000c40       0xdf
 NRV2D          0x0000000000000c40       0xdf tmp/amd64-expand.o
                0x0000000000000d1f                __stop_NRV2D = .
                0x0000000000000d1f                . = ALIGN (0x1)
                0x0000000000000d1f                __start_NRV2B = .

NRV2B           0x0000000000000d1f       0xc8
 NRV2B          0x0000000000000d1f       0xc8 tmp/amd64-expand.o
                0x0000000000000de7                __stop_NRV2B = .

.data           0x0000000000000de8        0x0
 .data          0x0000000000000de8        0x0 tmp/amd64-linux.elf-fold.o
 .data          0x0000000000000de8        0x0 tmp/amd64-linux.elf-main.o
 .data          0x0000000000000de8        0x0 tmp/amd64-expand.o

.bss            0x0000000000000de8        0x0
 .bss           0x0000000000000de8        0x0 tmp/amd64-linux.elf-fold.o
 .bss           0x0000000000000de8        0x0 tmp/amd64-linux.elf-main.o
 .bss           0x0000000000000de8        0x0 tmp/amd64-expand.o

.rela.dyn       0x0000000000000de8        0x0
 .rela.text     0x0000000000000000        0x0 tmp/amd64-linux.elf-fold.o
LOAD tmp/amd64-linux.elf-fold.o
LOAD tmp/amd64-linux.elf-main.o
LOAD tmp/amd64-expand.o
OUTPUT(tmp/amd64-linux.elf-fold.bin elf64-x86-64)
                0x0000000000000000                . = ALIGN (0x1)
                0x0000000000000000                __start_LZMA_ELF00 = .

LZMA_ELF00      0x0000000000000000       0x64
 LZMA_ELF00     0x0000000000000000       0x64 tmp/amd64-expand.o
                0x0000000000000064                __stop_LZMA_ELF00 = .
                0x0000000000000064                . = ALIGN (0x1)
                0x0000000000000064                __start_LZMA_DEC10 = .

LZMA_DEC10      0x0000000000000000      0x9f7
 LZMA_DEC10     0x0000000000000000      0x9f7 tmp/amd64-expand.o
                0x00000000000009f7                __stop_LZMA_DEC10 = .
                0x00000000000009f7                . = ALIGN (0x1)
                0x00000000000009f7                __start_LZMA_DEC20 = .

LZMA_DEC20      0x0000000000000000      0x9f7
 LZMA_DEC20     0x0000000000000000      0x9f7 tmp/amd64-expand.o
                0x00000000000009f7                __stop_LZMA_DEC20 = .
                0x00000000000009f7                . = ALIGN (0x1)
                0x00000000000009f7                __start_LZMA_DEC30 = .

LZMA_DEC30      0x0000000000000000       0x18
 LZMA_DEC30     0x0000000000000000       0x18 tmp/amd64-expand.o
                0x0000000000000018                __stop_LZMA_DEC30 = .
                0x0000000000000018                . = ALIGN (0x1)
                0x0000000000000018                __start_EXP_TAIL = .

EXP_TAIL        0x0000000000000000        0xc
 EXP_TAIL       0x0000000000000000        0xc tmp/amd64-expand.o
                0x000000000000000c                __stop_EXP_TAIL = .
