
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x00000000001000bc                . = ((0x100000 + SIZEOF_HEADERS) + 0xc)

.text           0x00000000001000bc      0x9a0
 *(.text)
 .text          0x00000000001000bc      0x1fe tmp/amd64-linux.elf-fold.o
                0x00000000001000c2                get_page_mask
                0x00000000001002a8                munmap
                0x000000000010026f                mmap
                0x00000000001002b0                write
                0x00000000001002b4                read
                0x00000000001002b8                my_bkpt
                0x0000000000100286                Pprotect
                0x0000000000100298                exit
                0x000000000010029c                brk
                0x00000000001002a4                open
                0x00000000001002ac                mprotect
                0x00000000001002a0                close
 *fill*         0x00000000001002ba        0x2 00
 .text          0x00000000001002bc      0x79d tmp/amd64-linux.elf-main.o
                0x0000000000100912                upx_main
 *fill*         0x0000000000100a59        0x3 00
 .text          0x0000000000100a5c        0x0 tmp/amd64-expand.o
 *(.data)
 .data          0x0000000000100a5c        0x0 tmp/amd64-linux.elf-fold.o
 .data          0x0000000000100a5c        0x0 tmp/amd64-linux.elf-main.o
 .data          0x0000000000100a5c        0x0 tmp/amd64-expand.o
                0x0000000000100a5c                . = ALIGN (0x1)
                0x0000000000100a5c                __start_EXP_HEAD = .

EXP_HEAD        0x0000000000100a5c       0xe0
 EXP_HEAD       0x0000000000100a5c       0xe0 tmp/amd64-expand.o
                0x0000000000100a5c                f_expand
                0x0000000000100b3c                __stop_EXP_HEAD = .
                0x0000000000100b3c                . = ALIGN (0x1)
                0x0000000000100b3c                __start_NRV2E = .

NRV2E           0x0000000000100b3c       0xe5
 NRV2E          0x0000000000100b3c       0xe5 tmp/amd64-expand.o
                0x0000000000100c21                __stop_NRV2E = .
                0x0000000000100c21                . = ALIGN (0x1)
                0x0000000000100c21                __start_NRV2D = .

NRV2D           0x0000000000100c21       0xd7
 NRV2D          0x0000000000100c21       0xd7 tmp/amd64-expand.o
                0x0000000000100cf8                __stop_NRV2D = .
                0x0000000000100cf8                . = ALIGN (0x1)
                0x0000000000100cf8                __start_NRV2B = .

NRV2B           0x0000000000100cf8       0xc1
 NRV2B          0x0000000000100cf8       0xc1 tmp/amd64-expand.o
                0x0000000000100db9                __stop_NRV2B = .

.data

.bss            0x0000000000100dbc        0x0
 .bss           0x0000000000100dbc        0x0 tmp/amd64-linux.elf-fold.o
 .bss           0x0000000000100dbc        0x0 tmp/amd64-linux.elf-main.o
 .bss           0x0000000000100dbc        0x0 tmp/amd64-expand.o

.rela.dyn       0x0000000000100dc0        0x0
 .rela.text     0x0000000000000000        0x0 tmp/amd64-linux.elf-fold.o
LOAD tmp/amd64-linux.elf-fold.o
LOAD tmp/amd64-linux.elf-main.o
LOAD tmp/amd64-expand.o
OUTPUT(tmp/amd64-linux.elf-fold.bin elf64-x86-64)
                0x0000000000000000                . = ALIGN (0x1)
                0x0000000000000000                __start_LZMA_ELF00 = .

LZMA_ELF00      0x0000000000000000       0x64
 LZMA_ELF00     0x0000000000000000       0x64 tmp/amd64-expand.o
                0x0000000000000064                __stop_LZMA_ELF00 = .
                0x0000000000000064                . = ALIGN (0x1)
                0x0000000000000064                __start_LZMA_DEC10 = .

LZMA_DEC10      0x0000000000000000      0x9f7
 LZMA_DEC10     0x0000000000000000      0x9f7 tmp/amd64-expand.o
                0x00000000000009f7                __stop_LZMA_DEC10 = .
                0x00000000000009f7                . = ALIGN (0x1)
                0x00000000000009f7                __start_LZMA_DEC20 = .

LZMA_DEC20      0x0000000000000000      0x9f7
 LZMA_DEC20     0x0000000000000000      0x9f7 tmp/amd64-expand.o
                0x00000000000009f7                __stop_LZMA_DEC20 = .
                0x00000000000009f7                . = ALIGN (0x1)
                0x00000000000009f7                __start_LZMA_DEC30 = .

LZMA_DEC30      0x0000000000000000       0x18
 LZMA_DEC30     0x0000000000000000       0x18 tmp/amd64-expand.o
                0x0000000000000018                __stop_LZMA_DEC30 = .
                0x0000000000000018                . = ALIGN (0x1)
                0x0000000000000018                __start_EXP_TAIL = .

EXP_TAIL        0x0000000000000000        0xc
 EXP_TAIL       0x0000000000000000        0xc tmp/amd64-expand.o
                0x000000000000000c                __stop_EXP_TAIL = .
